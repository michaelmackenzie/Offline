// (Muon) Stoping Target Monitor (STM)
// v06 Updates: Remove the magnet, extend the CRV shield pipe to the FOV collimator

bool   stm.build                       = true;
int    stm.verbosityLevel              = 0;
bool   stm.visible                     = true;
bool   stm.isolid                      = false;

/////////////////////////////////////////////////////////////
// STM detector

//Build STM within z = 34 inches (863.6 mm) of downstream hall wall
double stm.z.allowed = 863.6;

//STM may have two detectors
bool   stm.det1.build                     = true;
string stm.det1.material                  = "G4_Ge";
double stm.det1.rIn                       =   0.0;
double stm.det1.rOut                      =  45.0;
double stm.det1.xoffset                   =  50.0; //45mm = 1.77 inches
double stm.det1.halfLength                =  40.0;
string stm.det1.can.material              = "G4_Al";
string stm.det1.can.gas                   = "G4_Galactic"; // ~vacuum
double stm.det1.can.rIn                   =  46.5;
double stm.det1.can.rOut                  =  47.5; //47.5mm radius is for the 3.75in OD can from Ortec
double stm.det1.can.UpStrSpace            = 100.0;  // z=10cm space between this and previous element
double stm.det1.can.halfLength            =  50.0;
string stm.det1.can.UpStrWindowMaterial   = "G4_Al";
double stm.det1.can.UpStrWindowHalfLength =   0.5; //Standard Al window is 1mm thick

bool   stm.det2.build                     = true;
string stm.det2.material                  = "G4_Ge";
double stm.det2.rIn                       =   0.0;
double stm.det2.rOut                      =  45.0;
double stm.det2.xoffset                   = -50.0; //45mm = 1.77 inches
double stm.det2.halfLength                =  40.0;
string stm.det2.can.material              = "G4_Al";
string stm.det2.can.gas                   = "G4_Galactic"; // ~vacuum
double stm.det2.can.rIn                   =  46.5;
double stm.det2.can.rOut                  =  47.5; //47.5mm radius is for the 3.75in OD can from Ortec
double stm.det2.can.UpStrSpace            = 100.0;  // z=10cm space between this and previous element
double stm.det2.can.halfLength            =  50.0;
string stm.det2.can.UpStrWindowMaterial   = "G4_Al"; //"G4_Be";
double stm.det2.can.UpStrWindowHalfLength =   0.5;   //0.381; //Standard Be window is 0.762mm thick

//"spot-size" collimator, just upstream of the detector(s)
bool   stm.SScollimator.build             =  true; //
string stm.SScollimator.material          = "G4_Pb";
double stm.SScollimator.UpStrSpace        =    0.0; // this parameter not used for this collimator
double stm.SScollimator.halfWidth         =  215.9; //
double stm.SScollimator.halfHeight        =  228.6; //
double stm.SScollimator.halfLength        =   76.2; // 76.2mm = 3 inch halflength
bool   stm.SScollimator.liner.build       =  true; //
string stm.SScollimator.liner.material    =  "G4_W";
double stm.SScollimator.liner.halfWidth   =  105.0; //
double stm.SScollimator.liner.halfHeight  =   55.0; //
double stm.SScollimator.liner.halfLength  =   76.2; //
double stm.SScollimator.liner.cutOutHalfLength  =  0.0; // no cutout for this collimator
double stm.SScollimator.hole1.xoffset     =   40.6; // (38.1mm = 1.5 inches)
double stm.SScollimator.hole1.radiusUpStr =    6.795; // DEPRECATED parameter, no longer used
double stm.SScollimator.hole1.radiusDnStr =    5.642; // 5.642mm for A=1.0 cm^2 hole
bool   stm.SScollimator.hole1.liner.build      =  false; // liner along the length of the hole itself
double stm.SScollimator.hole1.liner.thickness  =  10.0; // 1cm thick hole liner
bool   stm.SScollimator.hole2.build       =   true; // has a second collimation hole?
double stm.SScollimator.hole2.xoffset     =  -40.6; // (38.1mm = 1.5 inches)
double stm.SScollimator.hole2.radiusUpStr =    6.795; // DEPRECATED parameter, no longer used
double stm.SScollimator.hole2.radiusDnStr =    5.642; // 5.642mm for A=1.0 cm^2 hole
bool   stm.SScollimator.hole2.liner.build      =  false; // liner along the length of the hole itself
double stm.SScollimator.hole2.liner.thickness  =  10.0; // 1cm thick hole liner
string stm.SScollimator.hole.liner.material    =  "G4_W";

/////////////////////////////////////////////////////////////
// Sweeper magnet parameters

bool   stm.magnet.build                = false;
string stm.magnet.material             = "Steel";
double stm.magnet.UpStrSpace           =  190.0;  // 19cm space between this and CRV-D
double stm.magnet.halfLength           =  0.; //remove the magnet
double stm.magnet.halfWidth            =  149.45; //set to be the hole width + 1.75"
double stm.magnet.halfHeight           =  247.45; //set to be the hole width + 1.75"
double stm.magnet.holeHalfHeight       =  203.0;  // 12 inch high hole
double stm.magnet.holeHalfWidth        =  105.0;  // this must be larger than stm.pipe.rOut
double stm.magnet.holeXOffset          =  0.0; //offset the magnet hole axis wrt the outer shell
double stm.magnet.holeYOffset          =  0.0; //ignore if the top of the yoke is thicker than the bottom, set identical
bool   stm.magnet.hasLiner             =  false; //turn off the poly liner
bool   stm.magnet.usePipeAsOrigin      =  true; //place magnet based on pipe wrt shield wall
bool   stm.magnet.centerHole           =  true; //place the hole center along viewing axis
double stm.magnet.field                =  0.0;// 0.051;  // Tesla (510 Gauss) --> set to 0 if assuming no magnetized material
bool   stm.magnet.field.visible        =  false;

/////////////////////////////////////////////////////////////
// turn off the support table material
bool   stm.magnet.stand.build          = false;
string stm.magnet.stand.material       = "G4_AIR";
double stm.magnet.stand.topExtraWidth  = 300.0;
double stm.magnet.stand.topExtraLength =   8.0;
double stm.magnet.stand.topHalfHeight  =  30.0;
double stm.magnet.stand.legRadius      =  50.0;

//Support (Table) on which to put the STM detector
bool   stm.detector.stand.build          = true;
string stm.detector.stand.material       = "StainlessSteel";
double stm.detector.stand.topExtraWidth  = 100.0;
double stm.detector.stand.topExtraLength =   0.0;
double stm.detector.stand.topHalfHeight  =  30.0;
double stm.detector.stand.legRadius      =  50.0;

//Transport Pipe (vacuum or He filled, so prevent Bremstrahlung before sweeper magnet)
bool   stm.pipe.build             = false;
double stm.pipe.rIn               = 92.0;
double stm.pipe.rOut              = 94.0;
string stm.pipe.material          = "StainlessSteel";
string stm.pipe.gas.material      = "G4_He";
double stm.pipe.UpStrSpace        = 10.0;
double stm.pipe.DnStrHalfLength   =  2.0; //was 25.0
string stm.pipe.UpStrWindow.material   = "G4_MYLAR";
double stm.pipe.UpStrWindow.halfLength = 0.089;
string stm.pipe.DnStrWindow.material   = "G4_MYLAR";
double stm.pipe.DnStrWindow.halfLength = 0.089;
double stm.pipe.flange.halfLength      = 0.9; //was 15.0
double stm.pipe.flange.overhangR       = 20.0;

/////////////////////////////////////////////////////////////
// Poly absorber downstream of the IFB window

bool   stm.ifbPoly.build               = true;
double stm.ifbPoly.rIn                 =   0.0;
double stm.ifbPoly.rOut                = 110.0;
double stm.ifbPoly.halfLength          =   3.0; //z half length
double stm.ifbPoly.gap                 =  10.0; //gap between poly and IFB window
string stm.ifbPoly.material            = "Polyethylene094";

/////////////////////////////////////////////////////////////
// Poly absorber in the shielding hole upstream of trolly

bool   stm.shieldingHolePoly.build               = true;
double stm.shieldingHolePoly.rIn                 =   0.0;
double stm.shieldingHolePoly.rOut                = 110.0;
double stm.shieldingHolePoly.halfLength          =  25.0; //z half length
double stm.shieldingHolePoly.gap                 = 215.0; //gap between poly and IFB window, to put into shielding hole
string stm.shieldingHolePoly.material            = "Polyethylene094";

/////////////////////////////////////////////////////////////
// FOV collimator

bool   stm.FOVcollimator.build                  =  true;
string stm.FOVcollimator.material               = "G4_Pb";
double stm.FOVcollimator.UpStrSpace             =    3.0; //gap between magnet and FOV collimator
double stm.FOVcollimator.halfWidth              =  197.485; // match to the mating block since no magnet
double stm.FOVcollimator.halfHeight             =  247.45;
double stm.FOVcollimator.halfLength             =   63.5;
bool   stm.FOVcollimator.liner.build            =  false; //remove the poly liner
string stm.FOVcollimator.liner.material         =  "Polyethylene096";
double stm.FOVcollimator.liner.cutOutHalfLength =    0.0; //no region with rectangular cut-out
double stm.FOVcollimator.liner.halfWidth        =  100.0; //
double stm.FOVcollimator.liner.halfHeight       =  100.0; //
double stm.FOVcollimator.liner.halfLength       =   75.0; //
double stm.FOVcollimator.hole1.xoffset          =    0.0; //
double stm.FOVcollimator.hole1.radiusUpStr      =   71.0; //make it a cylindrical hole, so both radii are the same
double stm.FOVcollimator.hole1.radiusDnStr      =   71.0;
bool   stm.FOVcollimator.hole1.liner.build      =  false; // liner along the length of the hole itself
double stm.FOVcollimator.hole1.liner.thickness  =    0.0; // no liner
bool   stm.FOVcollimator.hole2.build            =  false; // has a second collimation hole?
double stm.FOVcollimator.hole2.xoffset          =    0.0; //
double stm.FOVcollimator.hole2.radiusUpStr      =    0.0; //
double stm.FOVcollimator.hole2.radiusDnStr      =    0.0; //
bool   stm.FOVcollimator.hole2.liner.build      =  false; // liner along the length of the hole itself
double stm.FOVcollimator.hole2.liner.thickness  =    0.0; // no liner
string stm.FOVcollimator.hole.liner.material    =  "G4_W";
bool   stm.FOVcollimator.absorber.build         =   true; //
double stm.FOVcollimator.absorber.halfLength    =   5.0; //
string stm.FOVcollimator.absorber.material      =  "Polyethylene096";

/////////////////////////////////////////////////////////////
// Poly plug in the FOV collimator

bool   stm.FOVcollimator.plug.build      = true;
double stm.FOVcollimator.plug.radius     = 70.99; //make smaller than the FOVcollimator.hole1 radii
double stm.FOVcollimator.plug.halfLength = 50.;
double stm.FOVcollimator.plug.offset     = 0.; //offset from downstream end of hole
string stm.FOVcollimator.plug.material   = "Polyethylene094";

/////////////////////////////////////////////////////////////
// CRV shield pipe + mating block

bool   stm.shield.build                = true;
double stm.shield.rIn                  = 139.70;
double stm.shield.rOut                 = 171.45;
bool   stm.shield.hasLiner             = false; //don't build the poly liner in the CRV shield pipe
double stm.shield.widthLiner           = 0.0;
string stm.shield.materialLiner        = "Polyethylene096";
string stm.shield.material             = "Steel";
double stm.shield.pipe.halfLength      = 838.2; //254.0;
bool   stm.shield.matchPipeBlock       = true; //position the mating block based on the pipe position/length
double stm.shield.DnStrWall.holeRadius = 184.21; //added 10um to prevent an overlap with the shield pipe
double stm.shield.DnStrWall.halfLength =  25.40; //DnStrWall = mating block between CRV shield pipe and the magnet
double stm.shield.DnStrWall.halfHeight = 244.475;
double stm.shield.DnStrWall.halfWidth  = 197.485;
double stm.shield.DnStrWall.gap        = 0.10; //add small gap between the mating block and the magnet
double stm.shield.DnStrSpace           =   1.0;
double stm.shield.UpStrSpace           =  10.0;
double stm.shield.UpStrWall.gap        = -223.75; //position is based on CRV, not shielding, so correct by adjusting the gap so the gap is ~50 +-20 um (measured in ROOT viewer)
string stm.shield.DnStrWall.material   = "StainlessSteel"; //Stainless steel, not steel like the other components

/////////////////////////////////////////////////////////////////////////////////////
// Adding hole vd in shield pipe for vd 86

bool   vd.STMUpStrHole.build            = true;
bool   vd.STMUpStr.build                = true; //VD86 Rectangle in x-y plane, same size as the CRV (1mm dnStr of CRV)
bool   vd.STMMagDnStr.build             = true; //VD87 Rectangle in x-y plane, same size as the CRV
bool   vd.STMSSCollUpStr.build          = true; //VD101 Disk upstream of Spot-Size collimator
double vd.STMSSCollUpStr.r              = 200.0;// r=20cm
bool   vd.STMCollDnStr.build            = true; //VD88 Disk downstream of Spot-Size collimator
double vd.STMCollDnStr.r                = 200.0;// r=20cm
bool   vd.STMDet1UpStr.build            = true; //VD89 Disk in x-y plane, same size as the Ge detector 1
bool   vd.STMDet2UpStr.build            = true; //VD90 Disk in x-y plane, same size as the Ge detector 2
bool   vd.STMFieldOfViewCollDnStr.build = true; //VD100
// build virtual detector inside DS Neutron Shielding
bool   vd.DSNeutronShieldExit.build     = true; //VD81
double vd.DSNeutronShieldExit.r         =  110.0; //Must be the same as the following 2 values,


// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
